rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================================
    // Characters Collection
    // ========================================
    match /characters/{characterId} {
      // Allow reading/updating/deleting a single document if the user owns it
      allow get, update, delete: if isOwner();
      
      // Allow listing/querying documents only if the query filters by the user's own userId
      allow list: if request.auth != null && request.query.resource.data.userId == request.auth.uid;
      
      // Allow creating a new document if the userId matches the user's own UID
      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid;
    }

    // ========================================
    // Accounts Collection
    // ========================================
    match /accounts/{accountId} {
      // Allow reading/updating/deleting a single document if the user owns it
      allow get, update, delete: if isOwner();

      // Allow listing/querying documents only if the query filters by the user's own userId
      allow list: if request.auth != null && request.query.resource.data.userId == request.auth.uid;
      
      // Allow creating a new document if the userId matches the user's own UID
      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid;
    }

    // ========================================
    // Users Collection (Optional Profile Storage)
    // ========================================
    match /users/{userId} {
      allow get, update, delete, create: if request.auth != null && request.auth.uid == userId;
    }

    // ========================================
    // Helper Function
    // ========================================
    function isOwner() {
      return request.auth != null &&
             resource.data.userId == request.auth.uid;
    }
  }
}