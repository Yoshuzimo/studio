rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ============================
    // Characters Collection
    // ============================
    match /characters/{characterId} {
      // Rule for single document operations (get, update, delete)
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // Rule for creating a new document
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Rule for querying a list of documents
      allow list: if request.auth != null && request.query.where.get('userId')[2] == request.auth.uid;
    }

    // ============================
    // Accounts Collection
    // ============================
    match /accounts/{accountId} {
      // Rule for single document operations (get, update, delete)
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Rule for creating a new document
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Rule for querying a list of documents
      allow list: if request.auth != null && request.query.where.get('userId')[2] == request.auth.uid;
    }

    // ============================
    // Users Collection
    // ============================
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
  }
}
