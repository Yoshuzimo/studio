rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    match /publicProfiles/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);
    }

    match /accounts/{accountId} {
      allow list: if request.auth != null;
      allow read, write, delete: if isOwner(resource.data.userId);
    }

    match /characters/{characterId} {
      allow list: if request.auth != null;
      allow read, write, delete: if isOwner(resource.data.userId);

      match /questCompletions/{completionId} {
        allow read, write, delete: if get(/databases/$(database)/documents/characters/$(characterId)).data.userId == request.auth.uid;
      }
    }
    
    match /userConfiguration/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    match /suggestions/{suggestionId} {
      function isAdmin() {
          return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
      allow read: if request.auth != null && (isAdmin() || resource.data.suggesterId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.suggesterId == request.auth.uid;
      allow update: if request.auth != null && (isAdmin() || resource.data.suggesterId == request.auth.uid);
      allow delete: if isAdmin();
    }
  }
}