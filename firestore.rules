rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner() {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isOwner == true;
    }

    function isCreator() {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isCreator == true;
    }

    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow write: if isUser(userId) || isAdmin();
    }
    
    match /publicProfiles/{userId} {
      allow get;
      allow list;
      allow write: if isUser(userId);
    }
    
    match /characters/{characterId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn(); // Query must include .where('userId', '==', auth.uid)
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow write, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    match /accounts/{accountId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn(); // Query must include .where('userId', '==', auth.uid)
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow write, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Suggestions can be created by any user.
    // They can only be read/listed by their creator or an admin.
    // They can only be updated (replied to, status changed) by the creator or an admin.
    match /suggestions/{suggestionId} {
      allow create: if isSignedIn() && request.resource.data.suggesterId == request.auth.uid;
      allow read, list: if isSignedIn() && (resource.data.suggesterId == request.auth.uid || isAdmin());
      allow update: if isSignedIn() && (resource.data.suggesterId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // Owned packs are stored in a subcollection under userConfiguration.
    // A user can only access their own configuration document.
    match /userConfiguration/{userId}/{subcollection}/{docId} {
       allow read, write, delete: if isUser(userId);
    }

    // Logs can only be read by admins and created by the system (server-side functions).
    match /Logs/{logCollectionId}/{entryId} {
        allow read: if isAdmin();
        allow write: if false; // Only server-side can write logs
    }
  }
}
