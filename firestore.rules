rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =======================
    // Characters Collection
    // =======================
    match /characters/{characterId} {
      // Rule is secure: requires query to filter by userId
      allow list: if request.auth != null && request.query.where.size() > 0 && request.query.where.userId == request.auth.uid;

      // Allow get/update/delete if user is the owner
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // Allow create if user is setting their own userId
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // =======================
    // Accounts Collection - TEMPORARILY OPEN FOR DEBUGGING
    // =======================
    match /accounts/{accountId} {
      // Temporarily allowing any authenticated user to read/list to diagnose the permissions error.
      // THIS IS NOT SECURE FOR PRODUCTION.
      allow read, list: if request.auth != null;

      // Create/update/delete rules remain secure.
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // =======================
    // Quest Completions Subcollection
    // =======================
    match /characters/{characterId}/questCompletions/{completionId} {
        allow read, write, delete: if get(/databases/$(database)/documents/characters/$(characterId)).data.userId == request.auth.uid;
    }

    // =======================
    // Owned Packs Subcollection
    // =======================
    match /userConfiguration/{userId}/ownedPacksInfo/{accountId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // =======================
    // Users & Profiles
    // =======================
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /publicProfiles/{userId} {
      allow get: if true; // Publicly readable
      allow write: if request.auth != null && request.auth.uid == userId; // Only owner can write
    }

     // =======================
    // Suggestions & Admin collections
    // =======================
    match /suggestions/{suggestionId} {
      // Users can create suggestions for themselves.
      allow create: if request.auth.uid == request.resource.data.suggesterId;
      // Users can read their own suggestions. Admins can read any.
      allow get: if resource.data.suggesterId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Users can list their own suggestions. Admins can list all.
      allow list: if (request.query.limit <= 100 && request.query.filters[0][2] == request.auth.uid) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Users and Admins can update conversation. Only Admins can change status.
      allow update: if (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true) || (resource.data.suggesterId == request.auth.uid && request.resource.data.keys().hasOnly(['conversation']));
    }

    match /Logs/{logCollection}/{logId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
