rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(doc) {
      return request.auth != null && request.auth.uid == doc.userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /publicProfiles/{userId} {
      allow get;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /accounts/{accountId} {
      allow get: if isOwner(resource.data);
      allow list: if request.auth != null && request.query.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data);
    }

    match /characters/{characterId} {
      allow get: if isOwner(resource.data);
      allow list: if request.auth != null && request.query.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data);
      
      match /questCompletions/{completionId} {
          allow read, write: if get(/databases/$(database)/documents/characters/$(characterId)).data.userId == request.auth.uid;
      }
    }

    match /userConfiguration/{userId}/ownedPacksInfo/{accountId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /suggestions/{suggestionId} {
      allow get: if resource.data.suggesterId == request.auth.uid || isAdmin();
      allow list: if request.query.suggesterId == request.auth.uid || isAdmin();
      allow create: if request.resource.data.suggesterId == request.auth.uid;
      allow update: if resource.data.suggesterId == request.auth.uid || isAdmin();
    }
  }
}
