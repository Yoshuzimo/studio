
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================================
    // Helper Functions
    // ========================================
    function isOwner() {
      return request.auth != null &&
             resource.data.userId == request.auth.uid;
    }

    function isCreatingOwnData() {
      return request.auth != null &&
             request.resource.data.userId == request.auth.uid;
    }

    // ========================================
    // Characters Collection
    // ========================================
    match /characters/{characterId} {
      allow get, update, delete: if isOwner();
      // Allow a user to list only their own characters.
      // The query from the app MUST include `where('userId', '==', request.auth.uid)`.
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow create: if isCreatingOwnData();
    }

    // ========================================
    // Accounts Collection
    // ========================================
    match /accounts/{accountId} {
      allow get, update, delete: if isOwner();
      // Allow a user to list only their own accounts.
      // The query from the app MUST include `where('userId', '==', request.auth.uid)`.
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow create: if isCreatingOwnData();
    }

    // ========================================
    // Quest Completions (Subcollection)
    // ========================================
    match /characters/{characterId}/questCompletions/{completionId} {
        allow read, write: if get(/databases/$(database)/documents/characters/$(characterId)).data.userId == request.auth.uid;
    }

    // ========================================
    // Owned Adventure Packs (Subcollection)
    // ========================================
     match /userConfiguration/{userId}/ownedPacksInfo/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // ========================================
    // Users & Public Profiles
    // ========================================
    match /users/{userId} {
      // Users can only access their own user document.
      allow get, update, create, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /publicProfiles/{userId} {
      allow read; // Allow public reading of profiles
      allow update, create: if request.auth != null && request.auth.uid == userId;
    }
    
    // ============================
    // Suggestions
    // ============================
    match /suggestions/{suggestionId} {
      function isAdmin() {
          return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
      allow read: if isAdmin() || (request.auth != null && resource.data.suggesterId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.suggesterId == request.auth.uid;
      allow update: if (isAdmin() || (request.auth != null && resource.data.suggesterId == request.auth.uid));
      allow delete: if isAdmin();
    }
    
    // ============================
    // Static Game Data
    // ============================
    match /quests/{questId} {
      allow read; // Publicly readable
    }
    match /adventurePacks/{packId} {
      allow read; // Publicly readable
    }

  }
}
